---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: cluster-pool
  namespace: metallb-system
spec:
  addresses:
  - 10.0.5.150-10.0.5.200
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: metallb-system
  name: config
data:
  config: |
    address-pools:
      - name: default
      protocol: layer2
      addresses:
        - 10.0.5.150-10.0.5.200
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: grafana
  type: LoadBalancer
  loadBalancerIP: 10.0.5.151
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 3
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_DATABASE_TYPE
              value: postgres
            - name: GF_DATABASE_HOST
              value: "psql.s1.lan:5432"
            - name: GF_DATABASE_NAME
              value: "grafanadb"
            - name: GF_DATABASE_USER
              value: "grafanauser"
            - name: GF_DATABASE_PASSWORD
              value: "6af38ca9e308d7852146f92bdd9688f4"
            - name: GF_INSTALL_PLUGINS
              value: grafana-oncall-app
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata: 
  name: grafanaoncall
  labels:
    app: grafanaoncall
spec: 
  ports: 
    - port: 80
      targetPort: 8080
  selector:
    app: grafanaoncall
  type: LoadBalancer
  loadBalancerIP: 10.0.5.152
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafanaoncall
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafanaoncall
  template:
    metadata:
      labels:
        app: grafanaoncall
    spec:
      containers:
        - name: grafanaoncall
          image: grafana/oncall:latest
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_URL
              value: "postgresql://grafanaoncalluser:1cc030fd4728188b29e3ea409face826@psql.s1.lan:5432/grafanaoncalldb"
